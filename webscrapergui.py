# -*- coding: utf-8 -*-
"""WebScraperGUI.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1i7FYtBaqeOApSAOs_J-r-2hqpNozrGDP
"""

import tkinter as tk
from tkinter import filedialog, messagebox
import requests
from serpapi import GoogleSearch

# Function to upload image to ImgBB
def upload_image_to_imgbb(image_path, api_key):
    url = "https://api.imgbb.com/1/upload"
    with open(image_path, 'rb') as image_file:
        response = requests.post(url, data={'key': api_key}, files={'image': image_file})
    if response.status_code == 200:
        image_url = response.json()['data']['url']
        return image_url
    else:
        messagebox.showerror("Error", f"Failed to upload image to ImgBB: {response.json()}")
        return None

# Function to search for deepfakes using SerpApi
def search_deepfakes(image_url, serpapi_api_key):
    params = {
        "q": image_url,
        "engine": "google",
        "api_key": serpapi_api_key,
        "search_type": "image"
    }
    search = GoogleSearch(params)
    results = search.get_dict()

    if "images_results" in results:
        images = results["images_results"]
        result_text = f"Found {len(images)} images matching the uploaded image:\n"
        for image in images:
            image_url = image['original']
            result_text += f"Image URL: {image_url}\n"
        return result_text
    else:
        return "No deepfake matches found."

# Function triggered by the "Analyze Image" button
def analyze_image():
    file_path = filedialog.askopenfilename(title="Select an Image", filetypes=[("Image Files", "*.jpg;*.jpeg;*.png")])
    if not file_path:
        messagebox.showerror("Error", "Please select an image to proceed!")
        return

    # Upload image to ImgBB
    imgbb_api_key = "47cf5c6318ae2fc7d1ea3305189942c4"  # Replace with your ImgBB API key
    image_url = upload_image_to_imgbb(file_path, imgbb_api_key)
    if not image_url:
        return

    # Search for deepfakes using SerpApi
    serpapi_api_key = "d70b432deb7b0acfb440fada51e1446974913bb30cc753e78397752336b33db9"  # Replace with your SerpApi API key
    result_text = search_deepfakes(image_url, serpapi_api_key)

    # Display results in the GUI
    result_label.config(text=result_text)

# GUI setup
window = tk.Tk()
window.title("Deepfake Detection Tool")
window.geometry("600x400")
window.resizable(False, False)

# Title Label
title_label = tk.Label(window, text="Deepfake Detection Tool", font=("Helvetica", 16, "bold"))
title_label.pack(pady=10)

# Analyze Button
analyze_button = tk.Button(window, text="Upload and Analyze Image", command=analyze_image, font=("Helvetica", 12), bg="#4caf50", fg="white")
analyze_button.pack(pady=20)

# Result Display
result_label = tk.Label(window, text="Detection Results Will Appear Here", wraplength=550, justify="left", font=("Helvetica", 12))
result_label.pack(pady=20)

# Run GUI
window.mainloop()

